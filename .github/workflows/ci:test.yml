name: ci:test
on:
  - push
  - pull_request
jobs:
  test:
    name: Continuous integration (tests)
    runs-on: ubuntu-latest
    steps:
      - name: Checkout 🛎️
        uses: actions/checkout@v2

      - name: Compute Meteor release 🔎
        run: echo "METEOR_RELEASE=$(cat .meteor/release | cut -d@ -f2)" >> $GITHUB_ENV

      - name: Cache Meteor 💽
        uses: actions/cache@v2
        id: cache-meteor
        env:
          cache-name: cache-meteor
        with:
          path: ~/.meteor
          key: ${{ runner.os }}-test-${{ env.cache-name }}-${{ env.METEOR_RELEASE }}-${{ hashFiles('.meteor/release') }}-${{ hashFiles('.meteor/versions') }}
          restore-keys: |
            ${{ runner.os }}-test-${{ env.cache-name }}-${{ env.METEOR_RELEASE }}-${{ hashFiles('.meteor/release') }}-
            ${{ runner.os }}-test-${{ env.cache-name }}-${{ env.METEOR_RELEASE }}-

      - name: Setup PATH 🪜
        run: echo "$HOME/.meteor" >> $GITHUB_PATH

      - name: Install Meteor ${{ env.METEOR_RELEASE }} ☄️
        if: steps.cache-meteor.outputs.cache-hit != 'true'
        run: curl https://install.meteor.com?release=${{ env.METEOR_RELEASE }} | sh

      - name: Cache npm packages 📦
        uses: actions/cache@v2
        env:
          cache-name: cache-npm
        with:
          path: ~/.npm
          key: ${{ runner.os }}-test-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-test-${{ env.cache-name }}-
            ${{ runner.os }}-test-
            ${{ runner.os }}-

      - name: Install dependencies 🔧
        run: meteor npm clean-install

      - name: Test 🔬
        run: meteor npm run ci:test

      - name: Publish coverage report 📃
        uses: codecov/codecov-action@v1
        with:
          fail_ci_if_error: true
